document.querySelector('mutation-test-report-app').report = {"files":{"/mnt/e35d88d4-42b9-49ea-bf29-c4c3b018d429/diego/git/diegopacheco/Diego-Pacheco-Sandbox/scripts/node.js/stryker-fun/stryker-test/src/index.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":33,"line":11},"start":{"column":27,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"},"/mnt/e35d88d4-42b9-49ea-bf29-c4c3b018d429/diego/git/diegopacheco/Diego-Pacheco-Sandbox/scripts/node.js/stryker-fun/stryker-test/src/serviceWorker.js":{"language":"javascript","mutants":[{"id":"2","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"3","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"4","location":{"end":{"column":6,"line":20},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]') && // 127.0.0.0/8 are considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)","status":"Survived"},{"id":"5","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"6","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"7","location":{"end":{"column":41,"line":16},"start":{"column":3,"line":14}},"mutatorName":"LogicalOperator","replacement":"window.location.hostname === 'localhost' && // [::1] is the IPv6 localhost address.\nwindow.location.hostname === '[::1]'","status":"Survived"},{"id":"8","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"9","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"10","location":{"end":{"column":43,"line":14},"start":{"column":3,"line":14}},"mutatorName":"EqualityOperator","replacement":"window.location.hostname !== 'localhost'","status":"Survived"},{"id":"11","location":{"end":{"column":43,"line":14},"start":{"column":32,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"12","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"13","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"14","location":{"end":{"column":41,"line":16},"start":{"column":5,"line":16}},"mutatorName":"EqualityOperator","replacement":"// [::1] is the IPv6 localhost address.\nwindow.location.hostname !== '[::1]'","status":"Survived"},{"id":"15","location":{"end":{"column":41,"line":16},"start":{"column":34,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":2,"line":55},"start":{"column":34,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"19","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"LogicalOperator","replacement":"process.env.NODE_ENV === 'production' || 'serviceWorker' in navigator","status":"Survived"},{"id":"20","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"22","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"EqualityOperator","replacement":"process.env.NODE_ENV !== 'production'","status":"Survived"},{"id":"23","location":{"end":{"column":44,"line":24},"start":{"column":32,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"24","location":{"end":{"column":63,"line":24},"start":{"column":48,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"25","location":{"end":{"column":4,"line":54},"start":{"column":78,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"26","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"27","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"28","location":{"end":{"column":52,"line":27},"start":{"column":9,"line":27}},"mutatorName":"EqualityOperator","replacement":"publicUrl.origin === window.location.origin","status":"Survived"},{"id":"29","location":{"end":{"column":6,"line":32},"start":{"column":54,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"30","location":{"end":{"column":35,"line":34},"start":{"column":29,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":6,"line":53},"start":{"column":43,"line":34}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"32","location":{"end":{"column":66,"line":35},"start":{"column":21,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"33","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"18","location":{"end":{"column":76,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"34","location":{"end":{"column":22,"line":37},"start":{"column":11,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"35","location":{"end":{"column":8,"line":49},"start":{"column":24,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"36","location":{"end":{"column":10,"line":48},"start":{"column":50,"line":43}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"37","location":{"end":{"column":68,"line":46},"start":{"column":13,"line":45}},"mutatorName":"ArithmeticOperator","replacement":"'This web app is being served cache-first by a service ' - 'worker. To learn more, visit https://bit.ly/CRA-PWA'","status":"Survived"},{"id":"38","location":{"end":{"column":69,"line":45},"start":{"column":13,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":68,"line":46},"start":{"column":15,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"40","location":{"end":{"column":8,"line":52},"start":{"column":14,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":2,"line":99},"start":{"column":41,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"21","location":{"end":{"column":44,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":95},"start":{"column":27,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"43","location":{"end":{"column":8,"line":94},"start":{"column":42,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"45","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"46","location":{"end":{"column":37,"line":63},"start":{"column":13,"line":63}},"mutatorName":"EqualityOperator","replacement":"installingWorker != null","status":"Survived"},{"id":"47","location":{"end":{"column":10,"line":65},"start":{"column":39,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":10,"line":93},"start":{"column":48,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"50","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"51","location":{"end":{"column":53,"line":67},"start":{"column":15,"line":67}},"mutatorName":"EqualityOperator","replacement":"installingWorker.state !== 'installed'","status":"Survived"},{"id":"53","location":{"end":{"column":12,"line":92},"start":{"column":55,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":53,"line":67},"start":{"column":42,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"54","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"55","location":{"end":{"column":51,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"56","location":{"end":{"column":14,"line":81},"start":{"column":53,"line":68}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":79,"line":74},"start":{"column":17,"line":73}},"mutatorName":"ArithmeticOperator","replacement":"'New content is available and will be used when all ' - 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'","status":"Survived"},{"id":"58","location":{"end":{"column":70,"line":73},"start":{"column":17,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"59","location":{"end":{"column":79,"line":74},"start":{"column":19,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"60","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"61","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"62","location":{"end":{"column":44,"line":78},"start":{"column":19,"line":78}},"mutatorName":"LogicalOperator","replacement":"config || config.onUpdate","status":"Survived"},{"id":"63","location":{"end":{"column":16,"line":80},"start":{"column":46,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"64","location":{"end":{"column":14,"line":91},"start":{"column":20,"line":81}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"65","location":{"end":{"column":63,"line":85},"start":{"column":27,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"67","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"69","location":{"end":{"column":16,"line":90},"start":{"column":47,"line":88}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":45,"line":88},"start":{"column":19,"line":88}},"mutatorName":"LogicalOperator","replacement":"config || config.onSuccess","status":"Survived"},{"id":"70","location":{"end":{"column":6,"line":98},"start":{"column":21,"line":96}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"71","location":{"end":{"column":64,"line":97},"start":{"column":21,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"72","location":{"end":{"column":2,"line":129},"start":{"column":49,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":4,"line":105},"start":{"column":16,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":44,"line":104},"start":{"column":14,"line":104}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"75","location":{"end":{"column":32,"line":104},"start":{"column":16,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"76","location":{"end":{"column":42,"line":104},"start":{"column":34,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"77","location":{"end":{"column":6,"line":123},"start":{"column":23,"line":106}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"80","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"79","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"81","location":{"end":{"column":74,"line":111},"start":{"column":9,"line":110}},"mutatorName":"LogicalOperator","replacement":"response.status === 404 && contentType != null && contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"82","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"83","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"84","location":{"end":{"column":32,"line":110},"start":{"column":9,"line":110}},"mutatorName":"EqualityOperator","replacement":"response.status !== 404","status":"Survived"},{"id":"85","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"86","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"87","location":{"end":{"column":73,"line":111},"start":{"column":10,"line":111}},"mutatorName":"LogicalOperator","replacement":"contentType != null || contentType.indexOf('javascript') === -1","status":"Survived"},{"id":"88","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"89","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"90","location":{"end":{"column":29,"line":111},"start":{"column":10,"line":111}},"mutatorName":"EqualityOperator","replacement":"contentType == null","status":"Survived"},{"id":"91","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"92","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"93","location":{"end":{"column":73,"line":111},"start":{"column":33,"line":111}},"mutatorName":"EqualityOperator","replacement":"contentType.indexOf('javascript') !== -1","status":"Survived"},{"id":"94","location":{"end":{"column":65,"line":111},"start":{"column":53,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"96","location":{"end":{"column":8,"line":119},"start":{"column":9,"line":112}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"95","location":{"end":{"column":73,"line":111},"start":{"column":71,"line":111}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"97","location":{"end":{"column":10,"line":118},"start":{"column":60,"line":114}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"98","location":{"end":{"column":12,"line":117},"start":{"column":48,"line":115}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":8,"line":122},"start":{"column":14,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"100","location":{"end":{"column":6,"line":128},"start":{"column":18,"line":124}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"101","location":{"end":{"column":72,"line":126},"start":{"column":9,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"102","location":{"end":{"column":2,"line":141},"start":{"column":30,"line":131}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"105","location":{"end":{"column":22,"line":132},"start":{"column":7,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"104","location":{"end":{"column":35,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"106","location":{"end":{"column":4,"line":140},"start":{"column":37,"line":132}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":8,"line":136},"start":{"column":29,"line":134}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"108","location":{"end":{"column":8,"line":139},"start":{"column":23,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"78","location":{"end":{"column":62,"line":108},"start":{"column":48,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"103","location":{"end":{"column":35,"line":132},"start":{"column":7,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"}],"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"},"/mnt/e35d88d4-42b9-49ea-bf29-c4c3b018d429/diego/git/diegopacheco/Diego-Pacheco-Sandbox/scripts/node.js/stryker-fun/stryker-test/src/App.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":24},"start":{"column":16,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};